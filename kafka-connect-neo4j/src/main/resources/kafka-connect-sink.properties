##
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

neo4j.server.uri=Type: String;\nDescription: The Bolt URI (default bolt://localhost:7687)
neo4j.driver.log.level=Type: String;\nDescription: Neo4j Driver Log Level (default INFO)
neo4j.authentication.type=Type: enum[NONE, BASIC, KERBEROS];\nDescription: The authentication type (default BASIC)
neo4j.batch.size=Type: Int;\nDescription: The max number of events processed by the Cypher query (default 1000)
neo4j.batch.timeout.msecs=Type: Long;\nDescription: The execution timeout for the cypher query (default 30000)
neo4j.authentication.basic.username=Type: String;\nDescription: The authentication username
neo4j.authentication.basic.password=Type: String;\nDescription: The authentication password
neo4j.authentication.basic.realm=Type: String;\nDescription: The authentication realm
neo4j.authentication.kerberos.ticket=Type: String;\nDescription: The Kerberos ticket
neo4j.encryption.enabled=Type: Boolean;\nDescription: If the encryption is enabled (default false)
neo4j.encryption.trust.strategy=Type: enum[TRUST_ALL_CERTIFICATES, TRUST_CUSTOM_CA_SIGNED_CERTIFICATES, TRUST_SYSTEM_CA_SIGNED_CERTIFICATES];\nDescription: The Neo4j trust strategy (default RUST_ALL_CERTIFICATES)
neo4j.encryption.ca.certificate.path=Type: String;\nDescription: The path of the certificate
neo4j.connection.max.lifetime.msecs=Type: Long;\nDescription: The max Neo4j connection lifetime (default 1 hour)
neo4j.connection.acquisition.timeout.msecs=Type: Long;\nDescription: The max Neo4j acquisition timeout (default 1 hour)
neo4j.connection.liveness.check.timeout.msecs=Type: Long;\nDescription: The max Neo4j liveness check timeout (default 1 hour)
neo4j.connection.max.pool.size=Type: Int;\nDescription: The max pool size (default 100)
neo4j.load.balance.strategy=Type: enum[ROUND_ROBIN, LEAST_CONNECTED];\nDescription: The Neo4j load balance strategy (default LEAST_CONNECTED)
neo4j.retry.backoff.msecs=Type: Long;\nDescription: The time in milliseconds to wait following a transient error before a retry attempt is made (default 30000).
neo4j.retry.max.attemps=Type: Int;\nDescription: The maximum number of times to retry on transient errors before failing the task (default 5).
neo4j.topic.cdc.sourceId=Type: String;\nDescription: The topic list (separated by semicolon) that manages CDC events with the `SourceId` strategy
neo4j.topic.cdc.sourceId.labelName=Type: String;\nDescription: The label name attached to the events with the `SourceId` strategy (default SourceEvent)
neo4j.topic.cdc.sourceId.idName=Type: String;\nDescription: The id property name attached to the events with the `SourceId` strategy (default sourceId)
neo4j.topic.cdc.schema=Type: String;\nDescription: The topic list (separated by semicolon) that manages CDC events with the `Schema` strategy
neo4j.batch.parallelize=Type: Boolean;\nDescription: If enabled messages are processed concurrently in the sink. Non concurrent execution supports in-order processing, e.g. for CDC (default true)
neo4j.topic.cud=Type: String;\nDescription: The topic list (separated by semicolon) that manages CUD events 
